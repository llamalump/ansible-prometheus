- name: Include prometheus variables
  include_vars: 'prometheus.yml'

- name: Create /data
  file:
    path: "/data"
    state: directory
    owner: "root"
    group: "root"
    mode: "0755"

- name: "Create {{ prometheus_data_base_dir }}"
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_service_user }}"
    group: "{{ prometheus_service_group }}"
    mode: "2770"
  with_items:
    - "{{ prometheus_data_base_dir }}"

- name: Creating Prometheus directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_service_user }}"
    group: "{{ prometheus_service_group }}"
    mode: "2770"
  with_items:
    - "{{ prometheus_install_dir }}"
    - "{{ prometheus_config_dir }}"
    - "{{ prometheus_data_dir }}"
    - "{{ prometheus_lib_dir }}"
    - "{{ prometheus_rules_dir }}"

- name: Download and extract Prometheus tarball
  unarchive:
    src: "{{ prometheus_tarball_url }}"
    dest: "{{ prometheus_install_dir }}"
    owner: "{{ prometheus_service_user }}"
    group: "{{ prometheus_service_group }}"
    copy: no
    creates: "{{ prometheus_install_dir }}/{{ prometheus_archive }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Copy Prometheus config
  template:
    src: "{{ prometheus_server_conf_template_src }}"
    dest: "{{ prometheus_server_conf_dst }}"
    owner: "{{ prometheus_service_user }}"
    group: "{{ prometheus_service_group }}"
    validate: "{{ prometheus_install_dir }}/{{ prometheus_archive }}/promtool check config %s"
  notify:
    restart prometheus

#- name: "Making Prometheus rules file {{ item.name }}"
#  copy:
#    content: "{{ { 'groups': [item] } | to_json | regex_replace('\\[\\[', '{{') | regex_replace('\\]\\]', '}}') | from_json | to_nice_yaml }}"
#    dest: "{{ prometheus_rules_dir }}/{{ item.name }}.rules.yml"
#    owner: "{{ prometheus_service_user }}"
#    group: "{{ prometheus_service_group }}"
#    validate: "{{ prometheus_install_dir }}/{{ prometheus_archive }}/promtool check rules %s"
#  with_items: "{{ prometheus_rules }}"
#  when: prometheus_rules | length > 0
#  notify:
#    restart prometheus

- name: Install Prometheus systemd service
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
  notify:
    - daemon-reload
    - restart prometheus

- name: "Expose port {{ prometheus_web__listen_port }}/tcp in firewall"
  firewalld:
    port: "{{ prometheus_web__listen_port }}/tcp"
    permanent: true
    state: enabled
    immediate: yes
